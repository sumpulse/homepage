{"version":3,"sources":["webpack:///./src/pages/development.tsx"],"names":["sampleData","require","genreMap","tracks","matches","filter","t","classification","startsWith","map","prv","previews","icon_with_audio_preview","id","title","name","description","release","published_at","bpm","Number","attributes","find","att","value","fullLengthSec","length","minutes","seconds","genres","editIds","edits","type","audioSources","url","mp3_url","storeLinks","aj","trackObjects","forEach","editObjects","e","Development","JSON","stringify"],"mappings":"23+RACA,gCAMMA,EAAaC,EAAQ,QAErBC,EAAW,CACf,gBAAiB,UACjB,2BAA4B,UAC5B,gCAAiC,YACjC,4BAA6B,MAC7B,oBAAqB,UACrB,4BAA6B,UAC7B,+BAAgC,SAChC,2BAA4B,SAC5B,8BAA+B,WAC/B,oBAAqB,OACrB,gBAAiB,SACjB,cAAe,QACf,aAAc,OACd,mBAAoB,aACpB,YAAa,MACb,aAAc,OACd,mCAAoC,QACpC,kCAAmC,SAG/BC,EAASH,EAAWI,QACvBC,QAAO,SAACC,GAAD,OAAOA,EAAEC,eAAeC,WAAW,YAC1CC,KAAI,SAACH,GACJ,IAAMI,EAAMJ,EAAEK,SAASC,wBACvB,MAAO,CACLC,GAAIP,EAAEO,GACNC,MAAOR,EAAES,KACTC,YAAaV,EAAEU,YACfC,QAASX,EAAEY,aACXC,IAAKC,OAAOd,EAAEe,WAAWC,MAAK,SAACC,GAAD,MAAsB,QAAbA,EAAIR,QAAgBS,OAC3DC,cAAoC,GAArBf,EAAIgB,OAAOC,QAAejB,EAAIgB,OAAOE,QACpDC,OAAQ,CAAC3B,EAASI,EAAEC,iBACpBuB,QAAS,CAACxB,EAAEO,QAIZkB,EAAQ/B,EAAWI,QACtBC,QAAO,SAACC,GAAD,OAAOA,EAAEC,eAAeC,WAAW,YAC1CC,KAAI,SAACH,GACJ,IAAMI,EAAMJ,EAAEK,SAASC,wBACvB,MAAO,CACLC,GAAIP,EAAEO,GACNmB,KAAM,OACNN,OAA6B,GAArBhB,EAAIgB,OAAOC,QAAejB,EAAIgB,OAAOE,QAC7CK,aAAc,CACZ,CACEC,IAAKxB,EAAIyB,QACTH,KAAM,eAGVI,WAAY,CACVC,GAAI/B,EAAE4B,SAKVI,EAAe,GACnBnC,EAAOoC,SAAQ,SAACjC,GACdgC,EAAahC,EAAEO,IAAMP,KAGvB,IAAIkC,EAAc,GAClBT,EAAMQ,SAAQ,SAACE,GACbD,EAAYC,EAAE5B,IAAM4B,KAOPC,UAJS,kBACtB,6BAAMC,KAAKC,UAAUN,EAAc,KAAM","file":"component---src-pages-development-tsx-6e028cc69e6d72a06a31.js","sourcesContent":["import { Link } from \"gatsby\";\nimport React, { FC } from \"react\";\nimport FilterBar from \"../components/FilterBar\";\nimport Layout from \"../components/Layout\";\nimport MusicPlayer from \"../components/MusicPlayer\";\nimport TrackEntry from \"../components/TrackEntry\";\n\nconst sampleData = require(\"../../.local/sampledata.json\");\n\nconst genreMap = {\n  \"music/ambient\": \"ambient\",\n  \"music/ambient/electronic\": \"ambient\",\n  \"music/cinematic/suspense-dark\": \"cinematic\",\n  \"music/drum-bass-breakbeat\": \"dnb\",\n  \"music/electronica\": \"electro\",\n  \"music/electronica/dubstep\": \"dubstep\",\n  \"music/electronica/idm-glitch\": \"glitch\",\n  \"music/electronica/trance\": \"trance\",\n  \"music/experimental-abstract\": \"abstract\",\n  \"music/funk-groove\": \"funk\",\n  \"music/hip-hop\": \"hiphop\",\n  \"music/house\": \"house\",\n  \"music/jazz\": \"jazz\",\n  \"music/percussion\": \"percussion\",\n  \"music/pop\": \"pop\",\n  \"music/rock\": \"rock\",\n  \"music/world-beat/island-tropical\": \"world\",\n  \"music/world-beat/middle-eastern\": \"world\",\n};\n\nconst tracks = sampleData.matches\n  .filter((t) => t.classification.startsWith(\"music\"))\n  .map((t) => {\n    const prv = t.previews.icon_with_audio_preview;\n    return {\n      id: t.id,\n      title: t.name,\n      description: t.description,\n      release: t.published_at,\n      bpm: Number(t.attributes.find((att) => att.name === \"bpm\").value),\n      fullLengthSec: prv.length.minutes * 60 + prv.length.seconds,\n      genres: [genreMap[t.classification]],\n      editIds: [t.id],\n    };\n  });\n\nconst edits = sampleData.matches\n  .filter((t) => t.classification.startsWith(\"music\"))\n  .map((t) => {\n    const prv = t.previews.icon_with_audio_preview;\n    return {\n      id: t.id,\n      type: \"full\",\n      length: prv.length.minutes * 60 + prv.length.seconds,\n      audioSources: [\n        {\n          url: prv.mp3_url,\n          type: \"audio/mpeg\",\n        },\n      ],\n      storeLinks: {\n        aj: t.url,\n      },\n    };\n  });\n\nlet trackObjects = {};\ntracks.forEach((t) => {\n  trackObjects[t.id] = t;\n});\n\nlet editObjects = {};\nedits.forEach((e) => {\n  editObjects[e.id] = e;\n});\n\nconst Development: FC = () => (\n  <pre>{JSON.stringify(trackObjects, null, 4)}</pre>\n);\n\nexport default Development;\n"],"sourceRoot":""}