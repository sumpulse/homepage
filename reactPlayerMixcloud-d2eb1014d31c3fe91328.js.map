{"version":3,"sources":["webpack:///./node_modules/react-player/lib/players/Mixcloud.js"],"names":["mod","__create","Object","create","__defProp","defineProperty","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropNames","getOwnPropertyNames","__getProtoOf","getPrototypeOf","__hasOwnProp","prototype","hasOwnProperty","__copyProps","to","from","except","desc","key","call","get","enumerable","__publicField","obj","value","configurable","writable","__defNormalProp","Mixcloud_exports","target","all","name","__export","default","Mixcloud","module","exports","import_react","isNodeMode","__esModule","__toESM","import_utils","import_patterns","Component","super","arguments","this","callPlayer","iframe","props","onMount","url","getSDK","then","Mixcloud2","player","PlayerWidget","ready","events","play","on","onPlay","pause","onPause","ended","onEnded","error","progress","seconds","duration","currentTime","onReady","onError","keepPlaying","length","undefined","fraction","config","id","match","MATCH_URL_MIXCLOUD","query","queryString","options","feed","createElement","ref","style","width","height","src","frameBorder","allow","canPlay","mixcloud"],"mappings":"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","file":"reactPlayerMixcloud-d2eb1014d31c3fe91328.js","sourcesContent":["var __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n// If the importer is in node compatibility mode or this is not an ESM\n// file that has been converted to a CommonJS file using a Babel-\n// compatible transform (i.e. \"__esModule\" has not been set), then set\n// \"default\" to the CommonJS \"module.exports\" for node compatibility.\nisNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", {\n  value: mod,\n  enumerable: true\n}) : target, mod));\nvar __toCommonJS = mod => __copyProps(__defProp({}, \"__esModule\", {\n  value: true\n}), mod);\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nvar Mixcloud_exports = {};\n__export(Mixcloud_exports, {\n  default: () => Mixcloud\n});\nmodule.exports = __toCommonJS(Mixcloud_exports);\nvar import_react = __toESM(require(\"react\"));\nvar import_utils = require(\"../utils\");\nvar import_patterns = require(\"../patterns\");\nconst SDK_URL = \"https://widget.mixcloud.com/media/js/widgetApi.js\";\nconst SDK_GLOBAL = \"Mixcloud\";\nclass Mixcloud extends import_react.Component {\n  constructor() {\n    super(...arguments);\n    __publicField(this, \"callPlayer\", import_utils.callPlayer);\n    __publicField(this, \"duration\", null);\n    __publicField(this, \"currentTime\", null);\n    __publicField(this, \"secondsLoaded\", null);\n    __publicField(this, \"mute\", () => {});\n    __publicField(this, \"unmute\", () => {});\n    __publicField(this, \"ref\", iframe => {\n      this.iframe = iframe;\n    });\n  }\n  componentDidMount() {\n    this.props.onMount && this.props.onMount(this);\n  }\n  load(url) {\n    (0, import_utils.getSDK)(SDK_URL, SDK_GLOBAL).then(Mixcloud2 => {\n      this.player = Mixcloud2.PlayerWidget(this.iframe);\n      this.player.ready.then(() => {\n        this.player.events.play.on(this.props.onPlay);\n        this.player.events.pause.on(this.props.onPause);\n        this.player.events.ended.on(this.props.onEnded);\n        this.player.events.error.on(this.props.error);\n        this.player.events.progress.on((seconds, duration) => {\n          this.currentTime = seconds;\n          this.duration = duration;\n        });\n        this.props.onReady();\n      });\n    }, this.props.onError);\n  }\n  play() {\n    this.callPlayer(\"play\");\n  }\n  pause() {\n    this.callPlayer(\"pause\");\n  }\n  stop() {}\n  seekTo(seconds) {\n    let keepPlaying = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    this.callPlayer(\"seek\", seconds);\n    if (!keepPlaying) {\n      this.pause();\n    }\n  }\n  setVolume(fraction) {}\n  getDuration() {\n    return this.duration;\n  }\n  getCurrentTime() {\n    return this.currentTime;\n  }\n  getSecondsLoaded() {\n    return null;\n  }\n  render() {\n    const {\n      url,\n      config\n    } = this.props;\n    const id = url.match(import_patterns.MATCH_URL_MIXCLOUD)[1];\n    const style = {\n      width: \"100%\",\n      height: \"100%\"\n    };\n    const query = (0, import_utils.queryString)({\n      ...config.options,\n      feed: `/${id}/`\n    });\n    return /* @__PURE__ */import_react.default.createElement(\"iframe\", {\n      key: id,\n      ref: this.ref,\n      style,\n      src: `https://www.mixcloud.com/widget/iframe/?${query}`,\n      frameBorder: \"0\",\n      allow: \"autoplay\"\n    });\n  }\n}\n__publicField(Mixcloud, \"displayName\", \"Mixcloud\");\n__publicField(Mixcloud, \"canPlay\", import_patterns.canPlay.mixcloud);\n__publicField(Mixcloud, \"loopOnEnded\", true);"],"sourceRoot":""}