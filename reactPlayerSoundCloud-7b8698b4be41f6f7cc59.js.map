{"version":3,"sources":["webpack:///./node_modules/react-player/lib/players/SoundCloud.js"],"names":["mod","__create","Object","create","__defProp","defineProperty","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropNames","getOwnPropertyNames","__getProtoOf","getPrototypeOf","__hasOwnProp","prototype","hasOwnProperty","__copyProps","to","from","except","desc","key","call","get","enumerable","__publicField","obj","value","configurable","writable","__defNormalProp","SoundCloud_exports","target","all","name","__export","default","SoundCloud","module","exports","import_react","isNodeMode","__esModule","__toESM","import_utils","import_patterns","Component","super","arguments","this","callPlayer","setVolume","props","volume","iframe","onMount","url","isReady","getSDK","then","SC","PLAY","PLAY_PROGRESS","PAUSE","FINISH","ERROR","Widget","Events","player","bind","onPlay","duration","currentTime","onPause","e","currentPosition","fractionLoaded","loadedProgress","onEnded","onError","load","config","options","callback","getDuration","onReady","seconds","keepPlaying","length","undefined","pause","fraction","display","style","width","height","createElement","ref","src","encodeURIComponent","frameBorder","allow","canPlay","soundcloud"],"mappings":"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","file":"reactPlayerSoundCloud-7b8698b4be41f6f7cc59.js","sourcesContent":["var __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n// If the importer is in node compatibility mode or this is not an ESM\n// file that has been converted to a CommonJS file using a Babel-\n// compatible transform (i.e. \"__esModule\" has not been set), then set\n// \"default\" to the CommonJS \"module.exports\" for node compatibility.\nisNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", {\n  value: mod,\n  enumerable: true\n}) : target, mod));\nvar __toCommonJS = mod => __copyProps(__defProp({}, \"__esModule\", {\n  value: true\n}), mod);\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nvar SoundCloud_exports = {};\n__export(SoundCloud_exports, {\n  default: () => SoundCloud\n});\nmodule.exports = __toCommonJS(SoundCloud_exports);\nvar import_react = __toESM(require(\"react\"));\nvar import_utils = require(\"../utils\");\nvar import_patterns = require(\"../patterns\");\nconst SDK_URL = \"https://w.soundcloud.com/player/api.js\";\nconst SDK_GLOBAL = \"SC\";\nclass SoundCloud extends import_react.Component {\n  constructor() {\n    super(...arguments);\n    __publicField(this, \"callPlayer\", import_utils.callPlayer);\n    __publicField(this, \"duration\", null);\n    __publicField(this, \"currentTime\", null);\n    __publicField(this, \"fractionLoaded\", null);\n    __publicField(this, \"mute\", () => {\n      this.setVolume(0);\n    });\n    __publicField(this, \"unmute\", () => {\n      if (this.props.volume !== null) {\n        this.setVolume(this.props.volume);\n      }\n    });\n    __publicField(this, \"ref\", iframe => {\n      this.iframe = iframe;\n    });\n  }\n  componentDidMount() {\n    this.props.onMount && this.props.onMount(this);\n  }\n  load(url, isReady) {\n    (0, import_utils.getSDK)(SDK_URL, SDK_GLOBAL).then(SC => {\n      if (!this.iframe) return;\n      const {\n        PLAY,\n        PLAY_PROGRESS,\n        PAUSE,\n        FINISH,\n        ERROR\n      } = SC.Widget.Events;\n      if (!isReady) {\n        this.player = SC.Widget(this.iframe);\n        this.player.bind(PLAY, this.props.onPlay);\n        this.player.bind(PAUSE, () => {\n          const remaining = this.duration - this.currentTime;\n          if (remaining < 0.05) {\n            return;\n          }\n          this.props.onPause();\n        });\n        this.player.bind(PLAY_PROGRESS, e => {\n          this.currentTime = e.currentPosition / 1e3;\n          this.fractionLoaded = e.loadedProgress;\n        });\n        this.player.bind(FINISH, () => this.props.onEnded());\n        this.player.bind(ERROR, e => this.props.onError(e));\n      }\n      this.player.load(url, {\n        ...this.props.config.options,\n        callback: () => {\n          this.player.getDuration(duration => {\n            this.duration = duration / 1e3;\n            this.props.onReady();\n          });\n        }\n      });\n    });\n  }\n  play() {\n    this.callPlayer(\"play\");\n  }\n  pause() {\n    this.callPlayer(\"pause\");\n  }\n  stop() {}\n  seekTo(seconds) {\n    let keepPlaying = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    this.callPlayer(\"seekTo\", seconds * 1e3);\n    if (!keepPlaying) {\n      this.pause();\n    }\n  }\n  setVolume(fraction) {\n    this.callPlayer(\"setVolume\", fraction * 100);\n  }\n  getDuration() {\n    return this.duration;\n  }\n  getCurrentTime() {\n    return this.currentTime;\n  }\n  getSecondsLoaded() {\n    return this.fractionLoaded * this.duration;\n  }\n  render() {\n    const {\n      display\n    } = this.props;\n    const style = {\n      width: \"100%\",\n      height: \"100%\",\n      display\n    };\n    return /* @__PURE__ */import_react.default.createElement(\"iframe\", {\n      ref: this.ref,\n      src: `https://w.soundcloud.com/player/?url=${encodeURIComponent(this.props.url)}`,\n      style,\n      frameBorder: 0,\n      allow: \"autoplay\"\n    });\n  }\n}\n__publicField(SoundCloud, \"displayName\", \"SoundCloud\");\n__publicField(SoundCloud, \"canPlay\", import_patterns.canPlay.soundcloud);\n__publicField(SoundCloud, \"loopOnEnded\", true);"],"sourceRoot":""}